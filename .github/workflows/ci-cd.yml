name: CI/CD Pipeline

on:
  push:
    branches:
      - "*"

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run unit tests
        run: ./mvnw test

  docker-build-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build --platform linux/amd64 -t app-test .

  documentation-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build documentation
        run: ./mvnw javadoc:javadoc

      - name: Verify Javadoc directory
        run: |
          if [ -d "target/reports/apidocs" ]; then
            echo "Javadoc directory found:"
            ls -l target/reports/apidocs
          else
            echo "Javadoc directory not found!"
            exit 1
          fi

      - name: Upload Javadoc as artifact
        uses: actions/upload-artifact@v3
        with:
          name: javadoc
          path: target/reports/apidocs

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [unit-tests, docker-build-check, documentation-build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build --platform linux/amd64 -t ${{ secrets.DOCKER_HUB_USERNAME }}/java-app:main .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/java-app:main

      - name: Download Javadoc artifact
        uses: actions/download-artifact@v3
        with:
          name: javadoc
          path: javadoc
    
      - name: Deploy documentation to Netlify
        run: |
          netlify deploy --dir javadoc --prod --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --site ${{ secrets.NETLIFY_SITE_ID }}

      - name: Deploy to Render.com
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{"clearCache": true}' \
          https://api.render.com/deploy/${{ secrets.RENDER_SERVICE_ID }}
